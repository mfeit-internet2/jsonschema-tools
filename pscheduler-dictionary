{
    "pScheduler": {
        "AS": {
            "additionalProperties": false,
            "properties": {
                "number": {
                    "$ref": "#/pScheduler/Cardinal"
                },
                "owner": {
                    "type": "string"
                }
            },
            "required": [
                "number"
            ],
            "type": "object"
        },
        "AnyJSON": {
            "anyOf": [
                {
                    "type": "array"
                },
                {
                    "type": "boolean"
                },
                {
                    "type": "integer"
                },
                {
                    "type": "null"
                },
                {
                    "type": "number"
                },
                {
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        },
        "ArchiveSpecification": {
            "oneOf": [
                {
                    "$ref": "#/pScheduler/ArchiveSpecification_V1"
                },
                {
                    "$ref": "#/pScheduler/ArchiveSpecification_V2"
                },
                {
                    "$ref": "#/pScheduler/ArchiveSpecification_V3"
                }
            ]
        },
        "ArchiveSpecification_V1": {
            "additionalProperties": false,
            "properties": {
                "archiver": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "schema": {
                    "enum": [
                        1
                    ],
                    "type": "integer"
                },
                "transform": {
                    "$ref": "#/pScheduler/JQTransformSpecification"
                },
                "ttl": {
                    "$ref": "#/pScheduler/Duration"
                }
            },
            "required": [
                "archiver",
                "data"
            ],
            "type": "object"
        },
        "ArchiveSpecification_V2": {
            "additionalProperties": false,
            "properties": {
                "archiver": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "runs": {
                    "enum": [
                        "all",
                        "succeeded",
                        "failed"
                    ],
                    "type": "string"
                },
                "schema": {
                    "enum": [
                        2
                    ],
                    "type": "integer"
                },
                "transform": {
                    "$ref": "#/pScheduler/JQTransformSpecification"
                },
                "ttl": {
                    "$ref": "#/pScheduler/Duration"
                },
                "uri-host": {
                    "$ref": "#/pScheduler/URLHostPort"
                }
            },
            "required": [
                "schema",
                "archiver",
                "data"
            ],
            "type": "object"
        },
        "ArchiveSpecification_V3": {
            "additionalProperties": false,
            "properties": {
                "archiver": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "label": {
                    "type": "string"
                },
                "runs": {
                    "enum": [
                        "all",
                        "succeeded",
                        "failed"
                    ],
                    "type": "string"
                },
                "schema": {
                    "enum": [
                        3
                    ],
                    "type": "integer"
                },
                "transform": {
                    "$ref": "#/pScheduler/JQTransformSpecification"
                },
                "ttl": {
                    "$ref": "#/pScheduler/Duration"
                },
                "uri-host": {
                    "$ref": "#/pScheduler/URLHostPort"
                }
            },
            "required": [
                "schema",
                "archiver",
                "data"
            ],
            "type": "object"
        },
        "Array": {
            "type": "array"
        },
        "Boolean": {
            "type": "boolean"
        },
        "Cardinal": {
            "minimum": 1,
            "type": "integer"
        },
        "CardinalList": {
            "items": {
                "$ref": "#/pScheduler/Cardinal"
            },
            "type": "array"
        },
        "CardinalRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/Cardinal"
                },
                "upper": {
                    "$ref": "#/pScheduler/Cardinal"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "CardinalZero": {
            "minimum": 0,
            "type": "integer"
        },
        "CardinalZeroList": {
            "items": {
                "$ref": "#/pScheduler/CardinalZero"
            },
            "type": "array"
        },
        "CardinalZeroRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/CardinalZero"
                },
                "upper": {
                    "$ref": "#/pScheduler/CardinalZero"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "ClockState": {
            "additionalProperties": false,
            "properties": {
                "offset": {
                    "$ref": "#/pScheduler/Number"
                },
                "reference": {
                    "$ref": "#/pScheduler/String"
                },
                "source": {
                    "$ref": "#/pScheduler/String"
                },
                "synchronized": {
                    "$ref": "#/pScheduler/Boolean"
                },
                "time": {
                    "$ref": "#/pScheduler/Timestamp"
                }
            },
            "required": [
                "time",
                "synchronized"
            ],
            "type": "object"
        },
        "ContextSpecification": {
            "additionalProperties": false,
            "properties": {
                "contexts": {
                    "$ref": "#/pScheduler/ContextSpecificationListList"
                },
                "schema": {
                    "$ref": "#/pScheduler/Cardinal"
                }
            },
            "required": [
                "contexts"
            ],
            "type": "object"
        },
        "ContextSpecificationList": {
            "items": {
                "$ref": "#/pScheduler/ContextSpecificationSingle"
            },
            "type": "array"
        },
        "ContextSpecificationListList": {
            "items": {
                "$ref": "#/pScheduler/ContextSpecificationList"
            },
            "type": "array"
        },
        "ContextSpecificationSingle": {
            "additionalProperties": false,
            "properties": {
                "context": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/pScheduler/AnyJSON"
                }
            },
            "required": [
                "context",
                "data"
            ],
            "type": "object"
        },
        "Duration": {
            "pattern": "^P(?:\\d+(?:\\.\\d+)?W)?(?:\\d+(?:\\.\\d+)?D)?(?:T(?:\\d+(?:\\.\\d+)?H)?(?:\\d+(?:\\.\\d+)?M)?(?:\\d+(?:\\.\\d+)?S)?)?$",
            "type": "string",
            "x-invalid-message": "'%s' is not a valid ISO 8601 duration."
        },
        "DurationRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/Duration"
                },
                "upper": {
                    "$ref": "#/pScheduler/Duration"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "Email": {
            "format": "email",
            "type": "string"
        },
        "EnumMatch": {
            "additionalProperties": false,
            "properties": {
                "enumeration": {
                    "items": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/pScheduler/Number"
                            }
                        ]
                    },
                    "type": "array"
                },
                "invert": {
                    "$ref": "#/pScheduler/Boolean"
                }
            },
            "required": [
                "enumeration"
            ],
            "type": "object"
        },
        "Float": {
            "type": "number"
        },
        "GeographicPosition": {
            "pattern": "^(([+-]\\d{2})(\\d{2})?(\\d{2})?(\\.\\d+)?)(([+-]\\d{3})(\\d{2})?(\\d{2})?(\\.\\d+)?)([+-]\\d+(\\.\\d+)?)?$",
            "type": "string"
        },
        "Host": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/HostName"
                },
                {
                    "$ref": "#/pScheduler/IPAddress"
                }
            ]
        },
        "HostName": {
            "format": "host-name",
            "type": "string"
        },
        "HostNamePort": {
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])(:[0-9]+)?$",
            "type": "string"
        },
        "IPAddress": {
            "oneOf": [
                {
                    "format": "ipv4",
                    "type": "string"
                },
                {
                    "format": "ipv6",
                    "type": "string"
                }
            ]
        },
        "IPCIDR": {
            "oneOf": [
                {
                    "$ref": "#/pScheduler/IPv4CIDR"
                },
                {
                    "$ref": "#/pScheduler/IPv6CIDR"
                }
            ]
        },
        "IPCIDRList": {
            "items": {
                "$ref": "#/pScheduler/IPCIDR"
            },
            "type": "array"
        },
        "IPPort": {
            "maximum": 65535,
            "minimum": 0,
            "type": "integer"
        },
        "IPPortRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/IPPort"
                },
                "upper": {
                    "$ref": "#/pScheduler/IPPort"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "IPTOS": {
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
        },
        "IPv4": {
            "format": "ipv4",
            "type": "string"
        },
        "IPv4CIDR": {
            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "type": "string"
        },
        "IPv6": {
            "format": "ipv6",
            "type": "string"
        },
        "IPv6CIDR": {
            "pattern": "^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))$",
            "type": "string"
        },
        "IPv6RFC2732": {
            "pattern": "^\\[(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\](:[0-9]+)?$",
            "type": "string"
        },
        "Int16": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer"
        },
        "Int32": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
        },
        "Int64": {
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
        },
        "Int8": {
            "maximum": 127,
            "minimum": -128,
            "type": "integer"
        },
        "Integer": {
            "type": "integer"
        },
        "JQTransformSpecification": {
            "additionalProperties": false,
            "properties": {
                "args": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "output-raw": {
                    "$ref": "#/pScheduler/Boolean"
                },
                "script": {
                    "anyOf": [
                        {
                            "$ref": "#/pScheduler/String"
                        },
                        {
                            "$ref": "#/pScheduler/StringList"
                        }
                    ]
                }
            },
            "required": [
                "script"
            ],
            "type": "object"
        },
        "Limit": {
            "Boolean": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "fail-message": {
                        "$ref": "#/pScheduler/String"
                    },
                    "match": {
                        "$ref": "#/pScheduler/Boolean"
                    }
                },
                "required": [
                    "match"
                ],
                "type": "object"
            },
            "Cardinal": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "range": {
                        "$ref": "#/pScheduler/CardinalRange"
                    }
                },
                "required": [
                    "range"
                ],
                "type": "object"
            },
            "CardinalList": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "match": {
                        "$ref": "#/pScheduler/CardinalList"
                    }
                },
                "required": [
                    "match"
                ],
                "type": "object"
            },
            "CardinalZero": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "range": {
                        "$ref": "#/pScheduler/CardinalZeroRange"
                    }
                },
                "required": [
                    "range"
                ],
                "type": "object"
            },
            "CardinalZeroList": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "match": {
                        "$ref": "#/pScheduler/CardinalZeroList"
                    }
                },
                "required": [
                    "match"
                ],
                "type": "object"
            },
            "Duration": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "range": {
                        "$ref": "#/pScheduler/DurationRange"
                    }
                },
                "required": [
                    "range"
                ],
                "type": "object"
            },
            "IPCIDRList": {
                "properties": {
                    "cidr": {
                        "$ref": "#/pScheduler/IPCIDRList"
                    },
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    }
                }
            },
            "IPVersion": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "match": {
                        "$ref": "#/pScheduler/ip-version"
                    }
                },
                "required": [
                    "version"
                ]
            },
            "IPVersionList": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "enumeration": {
                        "$ref": "#/pScheduler/ip-version-list"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    }
                },
                "required": [
                    "enumeration"
                ]
            },
            "Probability": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "range": {
                        "$ref": "#/pScheduler/ProbabilityRange"
                    }
                },
                "required": [
                    "range"
                ]
            },
            "SINumber": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "invert": {
                        "$ref": "#/pScheduler/Boolean"
                    },
                    "range": {
                        "$ref": "#/pScheduler/SINumberRange"
                    }
                },
                "required": [
                    "range"
                ]
            },
            "String": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "fail-message": {
                        "$ref": "#/pScheduler/String"
                    },
                    "match": {
                        "$ref": "#/pScheduler/StringMatch"
                    }
                },
                "required": [
                    "match"
                ],
                "type": "object"
            }
        },
        "Maintainer": {
            "additionalProperties": false,
            "properties": {
                "email": {
                    "$ref": "#/pScheduler/Email"
                },
                "href": {
                    "$ref": "#/pScheduler/URL"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "NameVersion": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "$ref": "#/pScheduler/Version"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "type": "object"
        },
        "Number": {
            "type": "number"
        },
        "Numeric": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/Number"
                },
                {
                    "$ref": "#/pScheduler/SINumber"
                }
            ]
        },
        "NumericRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/Numeric"
                },
                "upper": {
                    "$ref": "#/pScheduler/Numeric"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "POSIXCronSpecification": {
            "pattern": "^(\\*|((([0-5]?\\d)|(([0-5]?\\d)-([0-5]?\\d)))(,(([0-5]?\\d)|(([0-5]?\\d)-([0-5]?\\d))))*))\\s+(\\*|(((([01]?\\d)|2[0-3])|((([01]?\\d)|2[0-3])-(([01]?\\d)|2[0-3])))(,((([01]?\\d)|2[0-3])|((([01]?\\d)|2[0-3])-(([01]?\\d)|2[0-3]))))*))\\s+(\\*|((((0?[1-9])|([12]\\d)|(3[01]))|(((0?[1-9])|([12]\\d)|(3[01]))-((0?[1-9])|([12]\\d)|(3[01]))))(,(((0?[1-9])|([12]\\d)|(3[01]))|(((0?[1-9])|([12]\\d)|(3[01]))-((0?[1-9])|([12]\\d)|(3[01])))))*))\\s+(\\*|((((0?[1-9])|(1[0-2]))|(((0?[1-9])|(1[0-2]))-((0?[1-9])|(1[0-2]))))(,(((0?[1-9])|(1[0-2]))|(((0?[1-9])|(1[0-2]))-((0?[1-9])|(1[0-2])))))*))\\s+(\\*|(([0-6]|([0-6]-[0-6]))(,([0-6]|([0-6]-[0-6])))*))$",
            "type": "string",
            "x-invalid-message": "'%s' is not a valid cron specification."
        },
        "ParticipantResult": {
            "additionalProperties": false,
            "properties": {
                "participant": {
                    "$ref": "#/pScheduler/Host"
                },
                "result": {
                    "$ref": "#/pScheduler/AnyJSON"
                }
            },
            "required": [
                "participant",
                "result"
            ],
            "type": "object"
        },
        "PluginEnumeration": {
            "Archiver": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "maintainer": {
                        "$ref": "#/pScheduler/Maintainer"
                    },
                    "name": {
                        "$ref": "#/pScheduler/String"
                    },
                    "schema": {
                        "$ref": "#/pScheduler/Cardinal"
                    },
                    "version": {
                        "$ref": "#/pScheduler/Version"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "version",
                    "maintainer"
                ],
                "type": "object"
            },
            "Context": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "maintainer": {
                        "$ref": "#/pScheduler/Maintainer"
                    },
                    "name": {
                        "$ref": "#/pScheduler/String"
                    },
                    "schema": {
                        "$ref": "#/pScheduler/Cardinal"
                    },
                    "version": {
                        "$ref": "#/pScheduler/Version"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "version",
                    "maintainer"
                ],
                "type": "object"
            },
            "Test": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "maintainer": {
                        "$ref": "#/pScheduler/Maintainer"
                    },
                    "name": {
                        "$ref": "#/pScheduler/String"
                    },
                    "scheduling-class": {
                        "enum": [
                            "background",
                            "background-multi",
                            "exclusive",
                            "normal"
                        ],
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/pScheduler/Cardinal"
                    },
                    "version": {
                        "$ref": "#/pScheduler/Version"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "version",
                    "maintainer",
                    "scheduling-class"
                ],
                "type": "object"
            },
            "Tool": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "$ref": "#/pScheduler/String"
                    },
                    "maintainer": {
                        "$ref": "#/pScheduler/Maintainer"
                    },
                    "name": {
                        "$ref": "#/pScheduler/String"
                    },
                    "preference": {
                        "$ref": "#/pScheduler/Integer"
                    },
                    "scheduling-class": {
                        "enum": [
                            "background",
                            "background-multi",
                            "exclusive",
                            "normal"
                        ],
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/pScheduler/Cardinal"
                    },
                    "tests": {
                        "$ref": "#/pScheduler/StringList"
                    },
                    "version": {
                        "$ref": "#/pScheduler/Version"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "version",
                    "tests",
                    "preference",
                    "maintainer"
                ],
                "type": "object"
            }
        },
        "Probability": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
        },
        "ProbabilityRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/Probability"
                },
                "upper": {
                    "$ref": "#/pScheduler/Probability"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "RetryPolicy": {
            "items": {
                "$ref": "#/pScheduler/RetryPolicyEntry"
            },
            "type": "array"
        },
        "RetryPolicyEntry": {
            "additionalProperties": false,
            "properties": {
                "attempts": {
                    "$ref": "#/pScheduler/Cardinal"
                },
                "wait": {
                    "$ref": "#/pScheduler/Duration"
                }
            },
            "required": [
                "attempts",
                "wait"
            ],
            "type": "object"
        },
        "RunResult": {
            "additionalProperties": false,
            "properties": {
                "id": {
                    "$ref": "#/pScheduler/UUID"
                },
                "participants": {
                    "items": {
                        "$ref": "#/pScheduler/ParticipantResult"
                    },
                    "type": "array"
                },
                "result": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "schedule": {
                    "$ref": "#/pScheduler/TimeRange"
                },
                "test": {
                    "$ref": "#/pScheduler/TestSpecification"
                },
                "tool": {
                    "$ref": "#/pScheduler/NameVersion"
                }
            },
            "required": [
                "id",
                "schedule",
                "test",
                "tool",
                "participants",
                "result"
            ],
            "type": "object"
        },
        "SINumber": {
            "oneOf": [
                {
                    "pattern": "^[0-9]+(\\.[0-9]+)?(\\s*[KkMmGgTtPpEeZzYy][Ii]?)?$",
                    "type": "string"
                },
                {
                    "type": "integer"
                }
            ]
        },
        "SINumberRange": {
            "additionalProperties": false,
            "properties": {
                "lower": {
                    "$ref": "#/pScheduler/SINumber"
                },
                "upper": {
                    "$ref": "#/pScheduler/SINumber"
                }
            },
            "required": [
                "lower",
                "upper"
            ],
            "type": "object"
        },
        "SNMPAlphaNumOID": {
            "pattern": "[a-z][A-Z]*",
            "type": "string"
        },
        "SNMPBits": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Bits$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/String"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPCounter32": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Counter32$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/UInt32"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPCounter64": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Counter64$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/UInt64"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPGauge32": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Gauge32$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/UInt32"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPIPAddress": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^IpAddress$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/IPAddress"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPInteger": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Integer$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/Integer"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPNumericOID": {
            "pattern": "^((\\.\\d)|\\d)+(\\.\\d+)*$",
            "type": "string"
        },
        "SNMPOID": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/SNMPNumericOID"
                },
                {
                    "$ref": "#/pScheduler/SNMPAlphaNumOID"
                },
                {
                    "$ref": "#/pScheduler/SNMPResultOID"
                }
            ]
        },
        "SNMPOpaque": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Opaque$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/String"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPOther": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "value": {
                    "$ref": "#/pScheduler/AnyJSON"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "SNMPResult": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/SNMPOID"
                },
                {
                    "$ref": "#/pScheduler/SNMPInteger"
                },
                {
                    "$ref": "#/pScheduler/SNMPUnsigned32"
                },
                {
                    "$ref": "#/pScheduler/SNMPString"
                },
                {
                    "$ref": "#/pScheduler/SNMPOpaque"
                },
                {
                    "$ref": "#/pScheduler/SNMPIPAddress"
                },
                {
                    "$ref": "#/pScheduler/SNMPCounter32"
                },
                {
                    "$ref": "#/pScheduler/SNMPCounter64"
                },
                {
                    "$ref": "#/pScheduler/SNMPGauge32"
                },
                {
                    "$ref": "#/pScheduler/SNMPTimeticks"
                },
                {
                    "$ref": "#/pScheduler/SNMPBits"
                },
                {
                    "$ref": "#/pScheduler/SNMPOther"
                }
            ]
        },
        "SNMPResultList": {
            "items": {
                "$ref": "#/pScheduler/SNMPResult"
            },
            "type": "array"
        },
        "SNMPResultOID": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^ObjectIdentity$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/String"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPString": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "String$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/String"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPTimeticks": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^TimeTicks$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/Integer"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "SNMPUnsigned32": {
            "additionalProperties": true,
            "properties": {
                "type": {
                    "pattern": "^Unsigned32$",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/pScheduler/UInt32"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "ScheduleSpecification": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/ScheduleSpecification_V1"
                },
                {
                    "$ref": "#/pScheduler/ScheduleSpecification_V2"
                }
            ]
        },
        "ScheduleSpecification_V1": {
            "additionalProperties": false,
            "properties": {
                "max-runs": {
                    "$ref": "#/pScheduler/Cardinal"
                },
                "repeat": {
                    "$ref": "#/pScheduler/Duration"
                },
                "schema": {
                    "enum": [
                        1
                    ],
                    "type": "integer"
                },
                "slip": {
                    "$ref": "#/pScheduler/Duration"
                },
                "sliprand": {
                    "$ref": "#/pScheduler/Boolean"
                },
                "start": {
                    "$ref": "#/pScheduler/TimestampAbsoluteRelative"
                },
                "until": {
                    "$ref": "#/pScheduler/TimestampAbsoluteRelative"
                }
            },
            "type": "object"
        },
        "ScheduleSpecification_V2": {
            "additionalProperties": false,
            "properties": {
                "max-runs": {
                    "$ref": "#/pScheduler/Cardinal"
                },
                "repeat": {
                    "$ref": "#/pScheduler/Duration"
                },
                "repeat-cron": {
                    "$ref": "#/pScheduler/POSIXCronSpecification"
                },
                "schema": {
                    "enum": [
                        2
                    ],
                    "type": "integer"
                },
                "slip": {
                    "$ref": "#/pScheduler/Duration"
                },
                "sliprand": {
                    "$ref": "#/pScheduler/Boolean"
                },
                "start": {
                    "$ref": "#/pScheduler/TimestampAbsoluteRelative"
                },
                "until": {
                    "$ref": "#/pScheduler/TimestampAbsoluteRelative"
                }
            },
            "required": [
                "schema"
            ],
            "type": "object"
        },
        "String": {
            "type": "string"
        },
        "StringList": {
            "items": {
                "$ref": "#/pScheduler/String"
            },
            "type": "array"
        },
        "StringMatch": {
            "additionalProperties": false,
            "properties": {
                "case-insensitive": {
                    "$ref": "#/pScheduler/Boolean"
                },
                "invert": {
                    "$ref": "#/pScheduler/Boolean"
                },
                "match": {
                    "$ref": "#/pScheduler/String"
                },
                "style": {
                    "enum": [
                        "exact",
                        "contains",
                        "regex"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "style",
                "match"
            ],
            "type": "object"
        },
        "TaskSpecification": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/TaskSpecification_V1"
                },
                {
                    "$ref": "#/pScheduler/TaskSpecification_V2"
                },
                {
                    "$ref": "#/pScheduler/TaskSpecification_V3"
                }
            ]
        },
        "TaskSpecification_V1": {
            "additionalProperties": false,
            "properties": {
                "_key": {
                    "$ref": "#/pScheduler/String"
                },
                "archives": {
                    "items": {
                        "$ref": "#/pScheduler/ArchiveSpecification"
                    },
                    "type": "array"
                },
                "lead-bind": {
                    "$ref": "#/pScheduler/Host"
                },
                "reference": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "schedule": {
                    "$ref": "#/pScheduler/ScheduleSpecification"
                },
                "schema": {
                    "enum": [
                        1
                    ],
                    "type": "integer"
                },
                "test": {
                    "$ref": "#/pScheduler/TestSpecification"
                },
                "tool": {
                    "$ref": "#/pScheduler/String"
                },
                "tools": {
                    "$ref": "#/pScheduler/StringList"
                }
            },
            "required": [
                "test"
            ],
            "type": "object"
        },
        "TaskSpecification_V2": {
            "additionalProperties": false,
            "properties": {
                "_key": {
                    "$ref": "#/pScheduler/String"
                },
                "archives": {
                    "items": {
                        "$ref": "#/pScheduler/ArchiveSpecification"
                    },
                    "type": "array"
                },
                "contexts": {
                    "$ref": "#/pScheduler/ContextSpecification"
                },
                "lead-bind": {
                    "$ref": "#/pScheduler/Host"
                },
                "reference": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "schedule": {
                    "$ref": "#/pScheduler/ScheduleSpecification"
                },
                "schema": {
                    "enum": [
                        2
                    ],
                    "type": "integer"
                },
                "test": {
                    "$ref": "#/pScheduler/TestSpecification"
                },
                "tool": {
                    "$ref": "#/pScheduler/String"
                },
                "tools": {
                    "$ref": "#/pScheduler/StringList"
                }
            },
            "required": [
                "schema",
                "test"
            ],
            "type": "object"
        },
        "TaskSpecification_V3": {
            "additionalProperties": false,
            "properties": {
                "_key": {
                    "$ref": "#/pScheduler/String"
                },
                "archives": {
                    "items": {
                        "$ref": "#/pScheduler/ArchiveSpecification"
                    },
                    "type": "array"
                },
                "contexts": {
                    "$ref": "#/pScheduler/ContextSpecification"
                },
                "lead-bind": {
                    "$ref": "#/pScheduler/Host"
                },
                "priority": {
                    "$ref": "#/pScheduler/Integer"
                },
                "reference": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "schedule": {
                    "$ref": "#/pScheduler/ScheduleSpecification"
                },
                "schema": {
                    "enum": [
                        3
                    ],
                    "type": "integer"
                },
                "test": {
                    "$ref": "#/pScheduler/TestSpecification"
                },
                "tool": {
                    "$ref": "#/pScheduler/String"
                },
                "tools": {
                    "$ref": "#/pScheduler/StringList"
                }
            },
            "required": [
                "schema",
                "test"
            ],
            "type": "object"
        },
        "TestSpecification": {
            "additionalProperties": false,
            "properties": {
                "spec": {
                    "$ref": "#/pScheduler/AnyJSON"
                },
                "type": {
                    "$ref": "#/pScheduler/String"
                }
            },
            "required": [
                "type",
                "spec"
            ],
            "type": "object"
        },
        "TimeRange": {
            "additionalProperties": false,
            "properties": {
                "end": {
                    "$ref": "#/pScheduler/Timestamp"
                },
                "start": {
                    "$ref": "#/pScheduler/Timestamp"
                }
            },
            "type": "object"
        },
        "Timestamp": {
            "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
            "type": "string"
        },
        "TimestampAbsoluteRelative": {
            "oneOf": [
                {
                    "$ref": "#/pScheduler/Timestamp"
                },
                {
                    "$ref": "#/pScheduler/Duration"
                },
                {
                    "pattern": "^@(R\\d*/)?P(?:\\d+(?:\\.\\d+)?Y)?(?:\\d+(?:\\.\\d+)?M)?(?:\\d+(?:\\.\\d+)?W)?(?:\\d+(?:\\.\\d+)?D)?(?:T(?:\\d+(?:\\.\\d+)?H)?(?:\\d+(?:\\.\\d+)?M)?(?:\\d+(?:\\.\\d+)?S)?)?$",
                    "type": "string"
                }
            ]
        },
        "UInt16": {
            "maximum": 65535,
            "minimum": 0,
            "type": "integer"
        },
        "UInt32": {
            "maximum": 4294967295,
            "minimum": 0,
            "type": "integer"
        },
        "UInt64": {
            "maximum": 184446744073709551615,
            "minimum": 0,
            "type": "integer"
        },
        "UInt8": {
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
        },
        "URL": {
            "format": "uri",
            "type": "string"
        },
        "URLHostPort": {
            "anyOf": [
                {
                    "$ref": "#/pScheduler/HostNamePort"
                },
                {
                    "$ref": "#/pScheduler/IPv6RFC2732"
                }
            ]
        },
        "UUID": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
            "type": "string"
        },
        "Version": {
            "pattern": "^[0-9]+(\\.[0-9]+)*[A-Za-z0-9-+]*$",
            "type": "string"
        },
        "icmp-error": {
            "enum": [
                "net-unreachable",
                "host-unreachable",
                "protocol-unreachable",
                "port-unreachable",
                "fragmentation-needed-and-df-set",
                "source-route-failed",
                "destination-network-unknown",
                "destination-host-unknown",
                "source-host-isolated",
                "destination-network-administratively-prohibited",
                "destination-host-administratively-prohibited",
                "network-unreachable-for-type-of-service",
                "icmp-destination-host-unreachable-tos",
                "communication-administratively-prohibited",
                "host-precedence-violation",
                "precedence-cutoff-in-effect"
            ],
            "type": "string"
        },
        "ip-version": {
            "enum": [
                4,
                6
            ],
            "type": "integer"
        },
        "ip-version-list": {
            "items": {
                "$ref": "#/pScheduler/ip-version"
            },
            "type": "array"
        }
    }
}
